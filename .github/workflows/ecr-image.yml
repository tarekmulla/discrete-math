name: ECR Image

on:
  push:
    branches: ['main']
    paths:
      - 'Dockerfile'
      - 'requirments.txt'
      - 'webapp/**'

  workflow_dispatch: #this attribute will enable the manual run to the pipeline


permissions:
  contents: read

# Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash

env:
  REGION: ${{ vars.REGION }}
  WEB_URL: ${{ vars.WEB_URL }}
  ECR_REPO: ${{ vars.ECR_REPO }}
  ECR_TAG: ${{ vars.ECR_TAG }}

jobs:
  ecr-image:
    name: ECR Push
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ env.WEB_URL }}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ env.ECR_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
